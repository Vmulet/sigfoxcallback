<!DOCTYPE html>
<html lang="en">
  <head>
    <style>
      .tbl_form
      {
      border-style:solid;
      border-width:0px;
      }
      #map {
      height: 500px;
      width: 96%;
      margin: 2%;
      padding-left: 600px;
      }
      html, body {
      height: 100%;
      margin: 0;
      padding: 0;
      }
    </style>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <input type="button" value="Click here to refresh" onclick="location.href='/'">
    <title>Test of Tracer device</title>
    <!-- Bootstrap core CSS -->
    <link href="/css/bootstrap.min.css" rel="stylesheet">
  </head>
  <body>
    <h3>Localisation of your device</h3>
    <div id="map"></div>
    <script>
      <!--Map code-->
      var marker;
      var cercle=1;
      var Circle;
      
      function initMap() {
      var locations = [];
      var radius =[];
      var j=0;
      var limit=20;
      var markers=[];
      //<!--Get "limit" position and radius contains in the database.-->
      <%entries.forEach(function(entry){%>
      if (j< limit){
      locations.push({lat: <%=entry.payload.lat%>, lng: <%=entry.payload.lng%>});
      radius.push(<%=entry.payload.radius%>);
      }
      j++;
      <%})%>
      var labels = [];
      for(var t=1;t<100;t++){labels.push(t.toString());}
      //<!--generate the map center to the last position.-->
      var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 5,
      center: locations[0],
      });
      
      function highlight(m, radius, tmp)
      {
      if(cercle){
      Circle=new google.maps.Circle({
      strokeColor: '#FF0000',
      strokeOpacity: 0.8,
      strokeWeight: 2,
      fillColor: '#FF0000',
      fillOpacity: 0.35,
      map: map,
      center:m.getPosition(),
      radius: radius[tmp]
      });
      }
      if(!cercle){
      Circle.setMap(null);
      }
      cercle=!cercle;
      };
      
      for( var i = 0;  i < locations.length;  i++ ) {
      marker = new google.maps.Marker({
      position: locations[i],
      label: labels[i % labels.length],			   
      map: map
      });
      function event(){
      return google.maps.event.addListener(marker,'click',function(){var m=marker;var tmp=i; return function(){highlight(m, radius, tmp);};}());
      };event();
      }/*		  
      var markerCluster = new MarkerClusterer(map, marker,
      {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});*/
      }
				  
				 
				  
				 
</script>

    <!--Database table code-->
    <div class="container-fluid">
      <div class="row">
	<!--<div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">-->
	<h1 class="page-header"><%=title%></h1>
	<h2><%=entries.length%> messages</h2>
	<div class="table-responsive">
	  <table class="table table-striped">
	    <thead>
	      <tr>
		<th>Received at</th>
		<th>Device</th>
		<th>Message timestamp</th>
		<th>Station ID</th>
		<th>Avg signal/noise ratio</th>
		<th>Rssi</th>
		<th>Latitude</th>
		<th>Longitude</th>
		<th>Radius</th>
	      </tr>
	    </thead>
	    <tbody>

              <% entries.forEach(function(entry){%>
	      <tr>
		<td><%=entry.time ? moment(entry.time).fromNow() : 'N/A'%></td>
		<td><%=entry.payload.id%></td>
		<td><%=moment(entry.payload.time*1000).format()%></td>
		<td><%=entry.payload.station%></td>
		<td><%=entry.payload.avgSignal%> dB</td>
		<td><%=entry.payload.rssi%> dBm</td>
		<td><strong><%=entry.payload.lat%></strong></td>
		<td><strong><%=entry.payload.lng%></strong></td>
		<td><strong><%=entry.payload.radius%>m</strong></td>
	      </tr>
	      <%})%>

            </tbody>
	  </table>
	</div>
      </div>
    </div>
</div>
<script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js">
</script>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDzxJmeC71h0yQFC-0Vh1GgJPuEerkoOMg&callback=initMap">
</script>

</body>
</html>
